#!/usr/bin/env bash

main() {
  # Defaults
  PARAMS=()
  dryrun=false
  cmd=""

  if [[ ${#} -ne 0 ]]; then
    while (("${#}")); do
      case ${1} in
      -h | --help)
        usage
        exit 0
        ;;
      -d | --dryrun)
        dryrun=true
        ;;
      --* | -*)
        echo "[Error] ❌ Unsupported flag ${1}"
        exit 1
        ;;
      *) # preserve positional arguments
        PARAMS+=("${1}")
        ;;
      esac
      shift
    done
  else
    printf "❌ You must supply at least a tgtbranch\n\n"
    usage
    exit 1
  fi

  # Set positional argumentsin theif propper place
  set -- "${PARAMS[@]}"

  if ${dryrun}; then
    cmd="echo"
  fi

  if [[ ${#} -gt 2 ]]; then
    printf "❌ You provided to many arguments\n\n"
    usage
    exit 1
  fi

  tgtbranch="${1}"
  tgtexists=$(git branch --list "$tgtbranch" | sed -e 's/^..//')
  tgtwtexists=$(git worktree list | grep -q "/${tgtbranch}")

  srcbranch="${2}"
  if [[ -n "${srcbranch}" ]]; then
    srcexists=$(git branch --list "$srcbranch" | sed -e 's/^..//')
  fi

  common_dir=$(git rev-parse --git-common-dir)
  common_dir=${common_dir%/*}
  if [[ -z "${common_dir}" ]]; then
    printf "❌ You are not in a git repository\n"
    exit 1
  fi

  if [[ -n "${tgtexists}" ]]; then # tgt is a current branch
    echo tgtexists
    if [[ -n ${tgtwtexists} ]]; then
      echo tgtwtexists
      printf "❌ %s already exists as a worktree\n" "${tgtbranch}"
      exit 1
    else
      if [[ -n "${srcbranch}" ]]; then # srcbranch provided but allowed since tgtbranch already exists
        echo srcbranch
        printf "❌ %s is existing branch so source branch %s is being ignored\n" "${tgtbranch}" "${srcbranch}"
        ${cmd} git worktrek add ${common_dir}/${tgtbranch}
      else
        ${cmd} git worktree add ${common_dir}/${tgtbranch}
      fi
    fi
  else
    echo not tgtexists
    if [[ -n "${srcbranch}" ]]; then
      echo srcbranch
      if [[ -n "${srcexists}" ]]; then
        echo srcexixts
        ${cmd} git worktree add -b ${tgtbranch} ${common_dir}/${tgtbranch} ${srcbranch}
      else
        echo not srcexists
        printf "❌ %s does not exist so can not create new branch %s\n" "${srcbranch}" "${tgtbranch}"
        exit 1
      fi
    else
      echo not srcbranch
      ${cmd} git worktree add -b ${tgtbranch} ${common_dir}/${tgtbranch}
    fi
  fi

}

usage() {
  printf "%s [-h|--help] [-d|--dryrun] tgtbranch [srcbranch]\n" "${0##*/}"
  printf "\nThis script will create a new worktree for tgtbranch based on srcbranch if supplied\n"
  printf "\n\t-d|--dryrun              Will tell you what commands would have been executed\n"
  printf "\t-h|--help                This help information\n"
  printf "\ttgtbranch                This the worktree to be created and is either an existing\n"
  printf "\t                         branch or a new branch based off of srcbranch\n"
  printf "\tsrcbranch                This is the branch the new workspace is based off of if it\n"
  printf "\t                         trtbranch does not exist it defaults to default-branch\n"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "${@}"
fi
